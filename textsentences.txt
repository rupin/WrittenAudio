Welcome to this tutorial video which teaches you how to design a PCB using Easy E D A.
Easy E D A is a free to use, and you can create PCBs on this software for your projects. There is no need to install anything, it runs in a modern browser.
I already have an account, so that is what I am using. You can pause the video here, go ahead and create an account, and come back here to continue.
When you are logged in, you can access the PCB editor by clicking here. 
You can access your past projects here in the project explorer.
Let us go ahead and create a new project.
I want to create a PCB for an E S P zero one module, which will send me a notification when two pins on the E S P zero one are connected together. Let us see how to do that.  
You can name the project whatever you like, and then give it a description so you know what the project is.
Once you create the project, you will be presented with the schematic view, where you would be creating a schematic diagram. A schematic diagram is a representation of your circuit, which has symbols for your components and connections between them. 
The libraries are where the components will be present. Click on this button to open the libraries explorer.
Since my project has an E S P zero one, that is what I start search for.  
This part looks okay to me, it has both a schematic diagram and a PCB layout, which is important. 
Double click the row to add the part to your schematic. Press ESC if you have placed the correct number of components in your schematic. 
You can use the mouse scroll wheel to zoom in and out.
Next, I need a voltage regulator for power. I have used a LM1117-3.3V device in the past in the SOT223 package, which is a surface mount package. This is easy to solder using simple hand soldering tools. This is what I put next on the schematic. 
I will go ahead and place a JST-XH two pin connector which will allow the user to send the signal which will send the notification. It has two pins, which have to be connected externally to send the notification. 
I then place a USB connector which will allow the user to power the device using a phone charger or a battery bank. Notice, I picked it from my workspace, which is where I have a custom USB connector with only 5V and GND pins. 
For simplicity, I have not included a charging circuit and a battery, but you can do that if you wished to. 
Once I have all my components in the schematic, I go ahead and start connecting them. I am a fan of using net ports for connections, as it keeps my schematic clean.  Netports are brilliant. You name the netport something which designates a signal. You can create another netport with the same name, and connect it to another signal and the two pins of the components will get connected. 
I create two netports 5 V IN and G N D. I then go ahead and use the wire tool to connect the appropriate USB connector pins to the netports. The USB connector also has two pads which connect to the metal body of the connector, which also need to be connected to G N D.
The LM1117 regulator comes next. It has 4 pins. We make the connections using netports and name them appropriately. You can copy and then paste a netport somewhere else. 
The regulator has a tab, which I am unsure what it should be connected to. I go ahead and lookup its pinout online, using a datasheet, to figure out what it should. 
It says it should be connected to 3.3 volts.
I go ahead and rotate the E S P zero one so i can read it correctly. 
Notice How to GND label moves, when you only click on the text. You should click on the component to move or copy or select it.  
I start connecting the pins of the E S P zero one using netports. Because the E S P zero one is a 3.3 volts device, we connect its Vcc pin to the output of the regulator. 
I go ahead and choose a through hole resistor from the libraries which I can connect the I O 0 pin to. 
The value of the resistor in the schematic is important, as it will help you figure out which parts to buy. 
If you drag your wire and it goes across a component, Easy EDA will connect the parts that come in between. 
I went ahead and renamed my JST XH connector to INP. The two pins of the JST connector are connected to 3.3Volts and Reset pin on the E S P zero one. The Reset pin also has a resistor connected to it. 
I also needed some switches for testing, so i go ahead and search for a tactile button in the library. 
It takes me sometime to search for the switch, but eventually I find the right one. 
I place the switch I chose in my schematic, then I went ahead and connected the pins of the switch to netports. 
At this point, I am pretty happy with all my connections, and started to create a PCB. The PCB option is under the Menu, and is called  “Generate PCB“. If no PCB exists in the project, a new one is created. 
We are automatically taken to the PCB viewing section. A second tab will open in the project.
The software does not know where to place the components. You will have to use judgement to place your components on the PCB. 
You will notice that the pads are connected with blue lines. These are called nets. Nets are essentially unrouted connections.
The purple boundary is your PCB outline. All pads and pins should be within this purple area. 
Notice the Regulator and the USB connector. These are SMD parts. The pads of these are red in color, because the top layer pads are red in color. There is a layer and objects popup in the pcb view which you can play around with. 
I start to move the parts in and will look at how to optimise the placement. I want to get a sense of how big my PCB will become. 
I do some trial placements, turn components around, move them around. Couple of things to remember
One, Connectors have to be placed on the edges of the board outline, because otherwise, you can put anything inside them. Imagine the USB connector placed in the middle of the board, will you be able to put your cable inside it? 
Two, we are working in two dimensions, but once the PCB gets made, and parts get populated, some of them will have a height, you will not be able to press a switch if the user’s finger cant reach the switch and depress it. 
There are some common sense ideas we have to stay with, and as you learn, you will start to appreciate them. 
You can move the edges of the purple rectangle to shrink or expand your PCB.
Once I am pretty happy with my parts placement, I go ahead and save my PCB in my project. 
I tend to go back and forth between my schematic and PCB, I change something on my schematic, then I click update PCB, and my PCB view will get refreshed. 
Remember, only two of the edges move linearly, so you have to move them, unless you want an odd shaped PCB.
I add more components in my schematic and then add new netports. This 3 Pin JST connector can be used for programming the E S P zero one.
Once I update the PCB, a new component appears in my PCB, which now I have to arrange within my purple boundary. 
You can verify your connections on the PCB. Click on a pin or a pad, the press the H key. This will highlight all the pins and pads that has the same signal connection.
The name of the component on the schematic should match the name in the PCB. Otherwise, if you update the PCB, the existing component will be deleted and a new one will be created. 
Once I am happy with the placement, I invoke the autorouter. The autorouter will use complex algorithms and create tracks from nets. This process is called routing.
A 8mil track length and an 8 mil clearance is more than enough.
Based on the complexity of the circuit, the autorouter will take sometime. 
Once the autorouter finishes, it tells you how many tracks have been made, and how many vias have been created. If there are any failed tracks, you will have to rearrange the parts to figure out how to reduce complexity. Sometimes, creating extra space between the parts will mostly alleviate the problem and you will have all tracks routed. The autorouter will for most of the time, do a very good job. 
The blue lines are tracks on the bottom of the PCB, the red ones are on the top. 
After review, you are ready for manufacturing. Easy EDA provides a way to generate fabrication files called gerbers. Save your PCB design first, and then click on the File Menu, then click on Generate Fabrication files. 
The popup will show you how your PCB looks, and provides a price to manufacture with JLCPCB. You can change the PCB quantity and the price will get updated. For testing purposes, 5 pcbs are more than sufficient. 
Go ahead and click on order at JLCPCB button.
It will take you to the JLCPCB page, where you can change the PCB color and then add the PCB to your cart. You can pay for the PCB and then finish the process. 
I like the quality of JLCPCB product and would recommend to you as well. 
Once I have ordered, it is time for me to save my work. The software provides a way to create a version of you project. Save a version and give it a description. If you ever edit your files and made an error, you can revert back to a version you know which was working. 
You can also add text to you PCB, which has to be added to the silk layers.  There is a top and a bottom silkscreen, use the Layers and Objects popup to choose which layer you are editing. 
I rearranged some components, which you can also do before you finish and order. 
Leave your questions in the comments and I will answer them. 
Thanks for watching and happy D I Y ing